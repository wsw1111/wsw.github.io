<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>liunx安装redis</title>
      <link href="/2022/06/25/liunx%E5%AE%89%E8%A3%85redis%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
      <url>/2022/06/25/liunx%E5%AE%89%E8%A3%85redis%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="🎉-前言"><a href="#🎉-前言" class="headerlink" title="🎉 前言"></a>🎉 前言</h3><div class="note default flat"><p>Redis 是完全开源免费的，遵守 BSD 协议，是一个灵活的高性能 key-value 数据结构存储，可以用来作为数据库、缓存和消息队列。</p></div><h2 id="环境🍦"><a href="#环境🍦" class="headerlink" title="环境🍦"></a>环境🍦</h2><ul><li>redis版本：6.2.0</li><li>liunx版本：centos 7.4<h2 id="环境搭建-🚀"><a href="#环境搭建-🚀" class="headerlink" title="环境搭建 🚀"></a>环境搭建 🚀</h2></li></ul><ol><li>&ensp;<font size=3><strong>进入/usr/local 目录下,下载<code>redis</code></strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-6.2.0.tar.gz</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>解压</strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-6.2.0.tar.gz</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>进入解压目录</strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis-6.2.0</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>编译安装</strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>编译之后开始安装 🚀</strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure></li><li><p>&ensp;<font size=3><strong>修改redis配置文件</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/redis-6.2.0/redis.conf</span><br><span class="line">将daemonize no 改成daemonize <span class="built_in">yes</span>// 配置redis为后台启动</span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1// redis 默认只允许本机访问,注掉</span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0// 表示允许远程连接</span><br><span class="line">requirepass 123456   // 设置redis密码</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>&ensp;<font size=3><strong>启动<code>redis</code>并指定配置文件</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./src/redis-server /usr/local/redis-6.2.0/redis.conf</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>客户端登录</strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/redis-6.2.0/bin</span><br><span class="line">./redis-cli -h localhost -p 6379</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>开放<code>端口</code></strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=6379/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li>&ensp;<font size=3><strong>关闭redis</strong></font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli shutdown</span><br><span class="line">redis-cli -a 密码 shutdown// 设置了密码的话用这条命令关闭redis</span><br></pre></td></tr></table></figure></li></ol><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><div class="tip info faa-horizontal animated-hover"><p><em>如果是阿里云服务器需配置安全组，将6379端口开放即可，切记！</em> </p></div>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> liunx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>liunx安装mysql并配置远程连接</title>
      <link href="/2022/06/19/liunx%E5%AE%89%E8%A3%85mysql-%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
      <url>/2022/06/19/liunx%E5%AE%89%E8%A3%85mysql-%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><div class="note default flat"><p>MySQL 是一款安全、跨平台、高效的，并与 PHP、Java 等主流编程语言紧密结合的数据库系统。该数据库系统是由瑞典的 MySQL AB 公司开发、发布并支持，由 MySQL 的初始开发人员 David Axmark 和 Michael Monty Widenius 于 1995 年建立的。</p></div><hr><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>&ensp;<font size=3><strong>首先需要确认下是否已经安装了mysql</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>这时候没有任何输出,则代表没有安装MySQL</strong></font><br>&ensp;<font size=3><strong>如果查到了相关文件，则需要删除mysql，然后重新安装，如下图所示：</strong></font><br> <img src="/images/mysql_jpg1.jpg" /></p><h3 id="删除mysql"><a href="#删除mysql" class="headerlink" title="删除mysql"></a>删除mysql</h3><p>&ensp;<font size=3><strong>使用 rpm -e 文件名 的命令删除该文件，以上面文件为例，执行以下命令：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e mysql-community-release-el7-5.noarch</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>重复使用 rpm -e 命令删除文件，直到所有文件完全删除</strong></font><br>&ensp;<font size=3><strong>如果提示依赖包错误，则使用以下命令尝试：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ev MySQL-client-5.5.25a-1.rhel5 --nodeps</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>使用yum卸载安装的mysql</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove mysql mysql-server mysql-libs mysql-server</span><br></pre></td></tr></table></figure></p><h3 id="删除mysql目录"><a href="#删除mysql目录" class="headerlink" title="删除mysql目录"></a>删除mysql目录</h3><p>&ensp;<font size=3><strong>全局搜索名称包含 mysql 的所有文件</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name <span class="string">&quot;*mysql*&quot;</span></span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>使用 rm -rf 命令删除所有搜索出来的mysql文件。</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /usr/lib/mysql</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>最后再检查一下：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa|grep mysql</span><br><span class="line">find / -name <span class="string">&quot;*mysql*&quot;</span></span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>如果有的话继续执行删除，直到删干净为止！</strong></font></p><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><p>&ensp;<font size=3><strong>Linux平台上推荐使用RPM包来安装mysql。</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>rpm安装：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>yum安装mysql-server：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-server</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>等待安装完成后,重启MySQL服务: </strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>查看MySQL服务状态：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld status</span><br></pre></td></tr></table></figure></p><h3 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h3><p>&ensp;<font size=3><strong>远程访问MySQL服务</strong></font><br>&ensp;<font size=3><strong>首先，远程访问需要设置一个允许远程访问的用户</strong></font><br>&ensp;<font size=3><strong>新安装的MySQL是没有密码的,输入命令进入数据库：</strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to <span class="string">&#x27;admin&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>授予<span class='p red'>admin</span>用户所有访问权限,<em><span class='p red'>.</span></em> 代表任意数据库的任意表,<span class='p red'>%</span>代表任意ip地址(这里也可以直接授予root用户这种权限)</strong></font><br>&ensp;<font size=3><strong>授权完成后刷新一下 : </strong></font><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>修改密码 : </strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> <span class="string">&#x27;admin&#x27;</span>@<span class="string">&#x27;%&#x27;</span>=password(<span class="string">&#x27;123456&#x27;</span>);</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>常用命令： </strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service mysqld start <span class="comment"># 启动mysql服务</span></span><br><span class="line">service mysqld stop <span class="comment"># 停止mysql服务</span></span><br><span class="line">service mysqld restart <span class="comment"># 重启mysql服务</span></span><br><span class="line">service mysqld status <span class="comment"># 查看mysql服务状态</span></span><br></pre></td></tr></table></figure></p><div class="tip info faa-horizontal animated-hover"><p><em>此时，mysql就配置完成了，可尝试使用navicat测试连接</em> </p></div><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><div class="tip info faa-horizontal animated-hover"><p><em>如果是阿里云服务器需配置安全组，将3306端口开放即可，切记！</em> </p></div><div class="tip info faa-horizontal animated-hover"><p><em>如果上述方法都尝试了，还是连接不上，可查看防火墙端口是否开放。具体方法自行百度，不在赘述</em> </p></div><hr>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> liunx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python导出指定项目依赖包</title>
      <link href="/2022/06/03/python%E5%AF%BC%E5%87%BA%E6%8C%87%E5%AE%9A%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96%E5%8C%85/"/>
      <url>/2022/06/03/python%E5%AF%BC%E5%87%BA%E6%8C%87%E5%AE%9A%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><div class="note default simple"><p>很多朋友都知道，利用pip也好，利用conda也好，我们可以使用pip freeze、conda export等语句来对当前的Python环境依赖进行导出备份，以方便在其他机器上还原环境，但此类环境依赖导出方法的局限在于，它会将当前环境下所有已安装的库信息进行导出，使得导出的结果繁杂臃肿。 而如果我们只想针对某个Python项目工程，将其内部真正导入的库信息进行导出，就可以用到pipreqs这个工具，使用pip install pipreqs进行安装之后，就可以以命令行的形式使用它</p></div><hr><h2 id="pipreqs的使用"><a href="#pipreqs的使用" class="headerlink" title="pipreqs的使用"></a>pipreqs的使用</h2><h3 id="安装pipreqs"><a href="#安装pipreqs" class="headerlink" title="安装pipreqs"></a>安装pipreqs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pipreqs</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>安装完毕之后，就可以使用<span class='p blue'>pipreqs</span>命令来导出当前Python环境下的依赖包信息，进入项目根目录执行如下命令：</strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipreqs ./</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>若成功，则会在项目根目录下生成一个<span class='p blue'>requirements.txt</span>文件。有时也会遇到一些<span class='p red'>错误</span>，具体如下：</strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;E:\python\3.8.0\lib\runpy.py&quot;</span>, line 192, <span class="keyword">in</span> _run_module_as_main</span><br><span class="line">    <span class="built_in">return</span> _run_code(code, main_globals, None,</span><br><span class="line">  File <span class="string">&quot;E:\python\3.8.0\lib\runpy.py&quot;</span>, line 85, <span class="keyword">in</span> _run_code</span><br><span class="line">    <span class="built_in">exec</span>(code, run_globals)</span><br><span class="line">  File <span class="string">&quot;E:\Python\3.8.0\Scripts\pipreqs.exe\__main__.py&quot;</span>, line 7, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;E:\python\3.8.0\lib\site-packages\pipreqs\pipreqs.py&quot;</span>, line 470, <span class="keyword">in</span> main</span><br><span class="line">    init(args)</span><br><span class="line">  File <span class="string">&quot;E\python\3.8.0\lib\site-packages\pipreqs\pipreqs.py&quot;</span>, line 406, <span class="keyword">in</span> init</span><br><span class="line">    candidates = get_all_imports(input_path,</span><br><span class="line">  File <span class="string">&quot;E:\python\3.8.0\lib\site-packages\pipreqs\pipreqs.py&quot;</span>, line 122, <span class="keyword">in</span> get_all_imports</span><br><span class="line">    contents = f.read()</span><br><span class="line">UnicodeDecodeError: <span class="string">&#x27;gbk&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xa4 in position 135: illegal multibyte sequence</span></span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong><span class='p green'>解决办法：</span></strong></font><br>&ensp;<font size=3><strong>1. 这是一个编码解码时发生的错误，我们需要在生成依赖包信息时指定编码方式。具体方式如以下命令：</strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pipreqs ./ --encoding=utf8</span><br></pre></td></tr></table></figure></p><h2 id="导入依赖包"><a href="#导入依赖包" class="headerlink" title="导入依赖包"></a>导入依赖包</h2><p>&ensp;<font size=3><strong>导入依赖包的方法：</strong></font><br>&ensp;<font size=3><strong>1. 在项目根目录下执行如下命令：</strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><br>&ensp;<font size=3><strong>也可指定使用其他源来加速安装依赖包，如豆瓣pypi，比如：</strong></font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导出依赖包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把github贡献日历部署到博客上</title>
      <link href="/2022/05/29/github%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86%E9%83%A8%E7%BD%B2%E5%88%B0hexo/"/>
      <url>/2022/05/29/github%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86%E9%83%A8%E7%BD%B2%E5%88%B0hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><font size=3><div class="note default flat"><p>此教程转载自Reverse大佬(<a href="https://blog.c12th.cn/archives/6.html">https://blog.c12th.cn/archives/6.html</a>)</p></div></font><hr><p><img src="https://ghchart.rshah.org/409ba5/12thstan" alt="12thstan's Github Chart" /></p><p><strong><p align = "center">效果展示</p></strong></p><hr><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="直接部署"><a href="#直接部署" class="headerlink" title="直接部署"></a>直接部署</h2><ul><li>这里用到了 <a href="https://github.com/2016rshah/githubchart-api">2016rshah 大佬</a> 的方法。</li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/github用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;github用户名&#x27;s Github chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/weixin_44580076/article/details/118737615">这个方法最绝的地方是，将你自己的贡献日历变成了图片，只需要使用一行 HTML 语句，就可以在任何地方使用贡献日历。</a></li></ul><p><br/></p><ul><li>如我在当前页面下部署</li></ul><p><img src="https://ghchart.rshah.org/12thstan" alt="12thstan's Github chart" /></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><hr><h2 id="自定义-颜色"><a href="#自定义-颜色" class="headerlink" title="自定义 颜色"></a>自定义 颜色</h2><ul><li>自定义 <strong>颜色</strong> <strong>#000000</strong> <em>十六进制颜色代码</em> <strong><font size="3" color="red">注意格式不带#</font></strong></li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/000000/github用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;github用户名&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><p><br/></p><ul><li><font size="3" color="blue">蓝色</font> <strong>#0000FF</strong></li></ul><p><img src="https://ghchart.rshah.org/0000FF/12thstan" alt="12thstan's Github Chart" /></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/0000FF/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li><font size="3" color="red">红色</font> <strong>#ff0000</strong></li></ul><p><img src="https://ghchart.rshah.org/ff0000/12thstan" alt="12thstan's Github Chart" /></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/ff0000/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li><font size="3" color="green">绿色</font> <strong>#00785D</strong></li></ul><p><img src="https://ghchart.rshah.org/00785D/12thstan" alt="12thstan's Github Chart" /></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/00785D/12thstan&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;12thstan&#x27;s Github Chart&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><hr><h2 id="部署到-Next-主题"><a href="#部署到-Next-主题" class="headerlink" title="部署到 Next 主题"></a>部署到 Next 主题</h2><ul><li><strong>这部分是关于 Next 主题的设置，请</strong> <font size="3" color="blue">点击链接</font> <strong>移步到 Next 主题</strong></li></ul><div class="tag link"><a class="link-card" title="把github贡献日历部署到博客上(二)" href="https://next.c12th.cn/archives/3.html"><div class="left"><img src="https://pic.imgdb.cn/item/624aa2d5239250f7c5147553.ico"/></div><div class="right"><p class="text">把github贡献日历部署到博客上(二)</p><p class="url">https://next.c12th.cn/archives/3.html</p></div></a></div><hr><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><div class="tip info faa-horizontal animated-hover"><p>如不能使用 <strong>HTML语句</strong> 可看另一种写法 <em><a href="https://jsimple.c12th.cn/posts/3/">把github贡献日历部署到博客上(二)</a></em></p></div><div class="tip cogs faa-horizontal animated-hover"><p>第一篇 <em><a href="https://blog.c12th.cn/archives/5.html">把github贡献日历部署到博客上(一)</a></em> </p></div><hr>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2022/05/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/05/28/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><div class="note default flat"><p>Hexo 是一个基于NodeJS的静态博客网站生成器，使用Hexo不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，并且完美支持Markdown格式，非常方便。</p></div><hr><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>&ensp;<font size=3><strong>windows可直接到<a href=https://git-scm.com/downloads>Git官网</a>自行下载安装，一路Next，安装完成后，需要将Git命令行工具添加到环境变量中，不在赘述。linux可通过终端命令行安装，如下：</strong> </font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>&ensp;<font size=3><strong>windows可直接到<a href=https://nodejs.org/en/>Node.js官网</a>自行下载安装，一路Next,下载完成后需将.exe文件加入环境变量，不在赘述。</strong></font></p><h3 id="linux安装Node-js"><a href="#linux安装Node-js" class="headerlink" title="linux安装Node.js"></a>linux安装Node.js</h3><p>&ensp;<font size=3><strong>在官网下载指定的包后上传至linux指定位置，然后进入系统目录，执行以下命令解压：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf node-v10.6.0-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>通过建立软连接，将解压后的文件夹放入环境变量中，如下：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/node-v10.6.0-linux-x64/nodejs/bin/npm /usr/local/bin/</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/node-v10.6.0-linux-x64/nodejs/bin/node /usr/local/bin/</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>检查是否安装成功，如下：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><hr><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>&ensp;<font size=3><strong>直接通过终端命令进行安装（安装完成后需将hexo.cmd所在目录加入环境变量中，否则执行hexo命令会报错，hexo.cmd默认安装在Node目录下）：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>检查是否安装成功，如下：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>新建一个文件夹，来进行初始化项目：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>安装依赖包：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>生成静态文件：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>启动服务：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong> 以上操作完成后即可通过浏览器输入网址<a href="http://localhost:4000访问项目，效果如下：">http://localhost:4000访问项目，效果如下：</a></strong></font></p><p><img src="/images/hexo.png" alt=""></p><hr><h3 id="将项目部署至github"><a href="#将项目部署至github" class="headerlink" title="将项目部署至github"></a>将项目部署至github</h3><p>&ensp;<font size=3><strong>首先右键打开git bash，然后输入下面命令配置git的相关信息：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>输入下面命令生成ssh key：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>创建完成后会在本地生成一个文件夹，在文件中找到id_rsa.pub，复制出来，默认目录为：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\17621\.ssh</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>然后在github点击自己的头像，点击setting，再点击SSH and GPG keys，新建一个SSH，名字随便。将刚刚复制出来的id_rsa.pub添加进去，点击save，完成。</strong></font></p><p>&ensp;<font size=3><strong>在github新建一个项目，如下图所示：</strong></font><br><img src="/images/new_repository.jpg" alt=""></p><p>&ensp;<font size=3><strong>在Repository name中输入你的用户名.github.io，点击Create repository，即可完成项目的创建。</strong></font><br>&ensp;<font size=3><strong> 然后可通过page页面查看项目的地址，如下：</strong></font><br><img src="/images/repository_url.jpg" alt=""></p><hr><h3 id="将项目部署至GitHub-Pages"><a href="#将项目部署至GitHub-Pages" class="headerlink" title="将项目部署至GitHub Pages"></a>将项目部署至GitHub Pages</h3><p>&ensp;<font size=3><strong>打开项目根目录下的_config.yml文件，拉到最后一行，添加如下内容：</strong></font></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">github.com/你的用户名/你的用户名.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>安装hexo-deployer-git，并在hexo中安装：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>然后在项目根目录下执行以下命令：</strong></font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>&ensp;<font size=3><strong>项目生成后，可通过浏览器输入网址<a href="http://你的用户名.github.io访问项目，效果如下：">http://你的用户名.github.io访问项目，效果如下：</a></strong></font></p><p><img src="/images/blog_index.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决pip下载python包很慢的问题</title>
      <link href="/2022/05/28/%E8%A7%A3%E5%86%B3pip%E4%B8%8B%E8%BD%BDpython%E5%8C%85%E5%BE%88%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/05/28/%E8%A7%A3%E5%86%B3pip%E4%B8%8B%E8%BD%BDpython%E5%8C%85%E5%BE%88%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>pip是python的包管理工具，它可以让我们安装python的包，并且可以自动更新，但是pip是从pypi中下载文件的，pypi是python官方的第三方库的仓库， 用的是国外的服务器，下载速度自然很慢。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我们只需要在pip下载时将下载源切换为国内源即可（module替换为你要下载的包名）</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.douban.com/simple module <span class="comment"># 使用豆瓣源</span></span><br><span class="line"> </span><br><span class="line">pip install -i http://mirrors.aliyun.com/pypi/simple/ module  <span class="comment"># 阿里云 </span></span><br><span class="line"> </span><br><span class="line">pip install -i  https://pypi.mirrors.ustc.edu.cn/simple/ module  <span class="comment"># 中国科技大学 </span></span><br><span class="line"> </span><br><span class="line">pip install -i  http://pypi.douban.com/simple/ module  <span class="comment"># 豆瓣(douban) </span></span><br><span class="line"> </span><br><span class="line">pip install -i  https://pypi.tuna.tsinghua.edu.cn/simple/ module  <span class="comment"># 清华大学 </span></span><br><span class="line"> </span><br><span class="line">pip install -i  http://pypi.mirrors.ustc.edu.cn/simple/ module  <span class="comment"># 中国科学技术大学</span></span><br></pre></td></tr></table></figure><p>如果你对软件测试有兴趣，可以添加微信一起交流。<br><img src="/images/wechat.jpg" width="50%" height="50%" /></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
